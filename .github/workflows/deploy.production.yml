name: Build & Deploy

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        environment: Production
        strategy:
            matrix:
                node-version: [22.x]
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        steps:
            - name: Clone Repository
              uses: actions/checkout@v3
            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
            - uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest
            - name: Install Dependencies
              run: bun i
            - name: Create CDN Key Files
              run: |
                  mkdir -p ./cdn-keys
                  echo "${{ secrets.CDN_PUBLIC_KEY }}" > ./cdn-keys/production.public_key.pem
                  echo "${{ secrets.CDN_PRIVATE_KEY }}" > ./cdn-keys/production.private_key.pem
            - name: 'Setup Build Cache'
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ github.workspace }}/packages/frontend/.next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-
            - name: Build & Deploy Project
              run: |
                  bunx sst deploy --stage=production
            - name: Run Db Migrations
              run: |
                  cd packages/frontend
                  bunx sst shell --stage production -- bunx @better-auth/cli generate --y
                  bunx sst shell --stage production -- bunx @better-auth/cli migrate --y
